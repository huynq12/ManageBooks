@page "/orderDetail/{id:int}"
@using LibraryManager.Services
@using global::Shared.Enum;

@inject IOrderService OrderService
@inject IToastService ToastService
@inject NavigationManager NavigationManager
<h3>OrderDetail</h3>
<table class="table">
	<tr>
		<td>Mã đơn:</td>
		<td>@orderDto.OrderId</td>
	</tr>
	<tr>
		<td>Mã khách hàng:</td>
		<td>@orderDto.CustomerId</td>
	</tr>
	<tr>
		<td>Tên khách hàng:</td>
		<td>@orderDto.CustomerName</td>
	</tr>
	<tr>
		<td>Mã sách:</td>
		<td>@orderDto.BookId</td>
	</tr>
	<tr>
		<td>Tiêu đề sách:</td>
		<td>@orderDto.BookTitle</td>
	</tr>
	<tr>
		<td>Trạng thái:</td>
		<td>@orderDto.Status</td>
	</tr>
	<tr>
		<td>Thời điểm mượn:</td>
		<td>@orderDto.CheckedOut.ToString("dd/M/yyyy hh:mm")</td>
	</tr>
	<tr>
		<td>SĐT:</td>
		<td>@orderDto.CustomerPhone</td>
	</tr>
	<tr>
		<td>Email:</td>
		<td>@orderDto.CustomerEmail</td>
	</tr>
	@if (orderDto.Returned.HasValue && orderDto.Status == OrderStatus.Returned)
	{
		<tr>
			<td>Thời điểm trả:</td>
			<td>@orderDto.Returned.Value.Day-@orderDto.Returned.Value.Month-@orderDto.Returned.Value.Year @orderDto.Returned.Value.Hour:@orderDto.Returned.Value.Minute</td>
		</tr>
	}

</table>
@if(orderDto.Status == OrderStatus.Active)
{
	<EditForm Model="order" OnValidSubmit="Submit">
		<button class="btn btn-primary" >Trả sách</button>
	</EditForm>
}

@code {
	[Parameter]
	public int Id { get; set; }

	public ManageBooks.Dtos.OrderDto orderDto = new ManageBooks.Dtos.OrderDto();
	public ManageBooks.Models.Order order = new ManageBooks.Models.Order();


	protected override async Task OnInitializedAsync()
	{
		await OrderService.GetOrderDtoById(Id);
	}

	protected override async Task OnParametersSetAsync()
	{
		var result = await OrderService.GetOrderDtoById(Id);
		if (result != null)
		{
			orderDto = result;
		}
		else NavigationManager.NavigateTo("/orderList");
	}
	

	private async Task Submit(EditContext context)
	{

		var result = await OrderService.UpdateOrderStatus(Id, order);
		if (result)
		{
			ToastService.ShowSuccess($"An order has been updated successfully.");
			NavigationManager.NavigateTo("/orderList");
		}
		else
		{
			ToastService.ShowError($"An error occurred in progress. Please contact to administrator.");

		}
	}
	
}
