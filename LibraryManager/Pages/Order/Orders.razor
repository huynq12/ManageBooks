@page "/orderList"
@using LibraryManager.Components
@using ManageBooks.Dtos;

@inject IOrderService OrderService
@inject NavigationManager NavigationManager
@inject IToastService ToastService

<h3>Orders</h3>
<div class="row mt-4">
		<SearchListOrder OnSearch="SearchOrder"></SearchListOrder>
	</div>
<button class="btn btn-primary mt-4" @onclick=CreateHandle>Tạo đơn mượn</button>
<table class="table">
	<thead>
		<tr>
			<th>Mã đơn</th>
			<th>Tiêu đề sách</th>
			<th>Tên khách hàng</th>
			<th>Trạng thái</th>
			
		</tr>
	</thead>
	<tbody>
		@foreach(var order in OrderService.OrderDtos)
		{
			<tr>
				<td>@order.OrderId</td>
				<td>@order.BookTitle</td>
				<td>@order.CustomerName</td>
				<td>@order.Status</td>
				<td>
					<a class="btn btn-primary" href="/orderDetail/@order.OrderId">
						<i class="oi oi-pencil"></i>
					</a>
				</td>
				<td>
						<button class="btn btn-danger" @onclick="(()=>DeleteHandle(order.OrderId))">
							<i class="oi oi-x"></i>
						</button>
					</td>
			</tr>
		}
	</tbody>
</table>
<Confirmation ConfirmationMessage="Are you sure to delete?"
			  ConfirmationTitle="Delete Order"
			  @ref="DeleteConfirmation"
			  ConfirmationChanged="OnConfirmDeleteOrder">
</Confirmation>


@code {
	private OrderListSearch listSearch = new OrderListSearch();
	protected Confirmation DeleteConfirmation { set; get; }

	private int DeleteId { set; get; }
	protected override async Task OnInitializedAsync()
	{
		await OrderService.GetOrders(listSearch);
	}
	void CreateHandle()
	{
		NavigationManager.NavigateTo("/orderCreate");
	}
	private async Task SearchOrder(OrderListSearch orderListSearch)
	{
		listSearch = orderListSearch;
		await OrderService.GetOrders(listSearch);
	}
	public void DeleteHandle(int deleteId)
	{
		DeleteId = deleteId;
		DeleteConfirmation.Show();
	}

	public async Task OnConfirmDeleteOrder(bool deleteConfirmed)
	{
		if (deleteConfirmed)
		{
			var result = await OrderService.DeleteOrder(DeleteId);
			if (result)
			{
				ToastService.ShowSuccess($"order has been deleted successfully.");
				NavigationManager.NavigateTo("/orderList");
			}
			else
			{
				ToastService.ShowError($"An error occurred in progress. Please contact to administrator.");

			}
			//await OrderService.GetOrders(listSearch);

		}


	}
}
