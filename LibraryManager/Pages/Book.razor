@page "/book"
@page "/book/{id:int}"
@using ManageBooks.Models
@inject IBookService BookService
@inject NavigationManager NavigationManager

<EditForm Model="book" OnValidSubmit="handleSubmit">
	<DataAnnotationsValidator></DataAnnotationsValidator>
	<ValidationSummary></ValidationSummary>
	@if(Id != null)
	{
		<div class="input-group mb-3">
			<label>Chỉnh sửa mã sách @Id</label>
		</div>
	}
	else
	{
		<div>Nhập mã sách mới</div>
	}
	<div>
		<span>Tiêu đề</span>
		<InputText id="title" class="form-control" @bind-Value="@book.Title"></InputText>
	</div>
	<div>
		<span>Tác giả</span>
		<InputText id="author" class="form-control" @bind-Value="@book.Author"></InputText>
	</div>
	<div>
		<span>Nhà xuất bản</span>
		<InputText id="publisher" class="form-control" @bind-Value="@book.Publisher"></InputText>
	</div>
	<div>
		<span>Thể loại</span>
		<InputText id="genre" class="form-control" @bind-Value="@book.Genre"></InputText>
	</div>
	<div>
		<span>Tổng số bản in</span>
		<InputNumber id="totalCopies" class="form-control" @bind-Value="@book.TotalCopies"></InputNumber>
	</div>
	<div>
		<span>Số bản in có sẵn</span>
		<InputNumber id="availableCopies" class="form-control" @bind-Value="@book.AvailableCopies"></InputNumber>
	</div>
	<button class="btn btn-primary">Sửa</button>
</EditForm>
@code {
	[Parameter]
	public int? Id { get; set; }
	ManageBooks.Models.Book? book = new ManageBooks.Models.Book();
	protected override async Task OnParametersSetAsync()
	{
		if (Id != null)
		{
			var result = await BookService.GetBookById((int)Id);
			if (result != null)
			{
				book = result;
			}
			else
			{
				NavigationManager.NavigateTo("/books");
			}


		}

	}
	async void handleSubmit ()
	{
		if(Id != null)
		{
			await BookService.UpdateBook((int)Id, book);
			NavigationManager.NavigateTo("/books");
		}
	}
}